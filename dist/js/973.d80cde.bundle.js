"use strict";(self.webpackChunkts_vue=self.webpackChunkts_vue||[]).push([[973],{8305:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(5393),u={class:"document_name"},c=function(r){return(0,t.dD)("data-v-2dd025a0"),r=r(),(0,t.Cn)(),r}((function(){return(0,t._)("img",{src:"public/favicon.ico",class:"document_name_logo"},null,-1)})),a=["innerHTML"];const i={props:{titleName:""},components:{DownOutlined:e(9421).Z},setup:function(){}},s=(0,e(3744).Z)(i,[["render",function(r,n,e,i,s,o){var d=(0,t.up)("router-link"),l=(0,t.up)("a-col"),g=(0,t.up)("DownOutlined"),_=(0,t.up)("a-menu-item"),m=(0,t.up)("a-menu"),v=(0,t.up)("a-dropdown"),p=(0,t.up)("a-row");return(0,t.wg)(),(0,t.iD)("div",u,[(0,t.Wm)(p,{type:"flex"},{default:(0,t.w5)((function(){return[(0,t.Wm)(l,{flex:"200px"},{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"home",class:"logo_wrap"},{default:(0,t.w5)((function(){return[c,(0,t.Uk)("  "),(0,t._)("span",{innerHTML:e.titleName},null,8,a)]})),_:1})]})),_:1}),(0,t.Wm)(l,{flex:"auto"}),(0,t.Wm)(l,{flex:"50px"},{default:(0,t.w5)((function(){return[(0,t.Wm)(v,{trigger:["click"]},{overlay:(0,t.w5)((function(){return[(0,t.Wm)(m,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"talkDemo"},{default:(0,t.w5)((function(){return[(0,t.Uk)("对讲")]})),_:1})]})),_:1}),(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"imDemo"},{default:(0,t.w5)((function(){return[(0,t.Uk)("即时通信")]})),_:1})]})),_:1}),(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"audioVideoDemo"},{default:(0,t.w5)((function(){return[(0,t.Uk)("音视频")]})),_:1})]})),_:1})]})),_:1})]})),default:(0,t.w5)((function(){return[(0,t._)("div",{onClick:n[0]||(n[0]=(0,t.iM)((function(){}),["prevent"])),class:"menu_dropdown text_right"},[(0,t.Uk)(" 演示 "),(0,t.Wm)(g)])]})),_:1})]})),_:1}),(0,t.Wm)(l,{flex:"50px"},{default:(0,t.w5)((function(){return[(0,t.Wm)(v,{trigger:["click"]},{overlay:(0,t.w5)((function(){return[(0,t.Wm)(m,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"talkDemoInstructions"},{default:(0,t.w5)((function(){return[(0,t.Uk)("对讲")]})),_:1})]})),_:1}),(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"imDemoInstructions"},{default:(0,t.w5)((function(){return[(0,t.Uk)("即时通信")]})),_:1})]})),_:1}),(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"audioVideoInstructions"},{default:(0,t.w5)((function(){return[(0,t.Uk)("音视频")]})),_:1})]})),_:1})]})),_:1})]})),default:(0,t.w5)((function(){return[(0,t._)("div",{onClick:n[1]||(n[1]=(0,t.iM)((function(){}),["prevent"])),class:"menu_dropdown text_right"},[(0,t.Uk)(" API "),(0,t.Wm)(g)])]})),_:1})]})),_:1})]})),_:1})])}],["__scopeId","data-v-2dd025a0"]])},4973:(r,n,e)=>{e.r(n),e.d(n,{default:()=>En});var t=e(5393),u=function(r){return(0,t.dD)("data-v-6a088657"),r=r(),(0,t.Cn)(),r},c={class:"fn_sdk_document"},a={class:"catalogue"},i=u((function(){return(0,t._)("div",{class:"second_level_bar"},"群组",-1)})),s=u((function(){return(0,t._)("div",{class:"second_level_bar"},"成员",-1)})),o=u((function(){return(0,t._)("div",{class:"second_level_bar"},"组织",-1)})),d=u((function(){return(0,t._)("div",{class:"second_level_bar"},"设备",-1)})),l=u((function(){return(0,t._)("div",{class:"second_level_bar"},"广播",-1)})),g=u((function(){return(0,t._)("div",{class:"second_level_bar"},"SOS",-1)})),_=u((function(){return(0,t._)("div",{class:"second_level_bar"},"对讲服务",-1)})),m=u((function(){return(0,t._)("div",{class:"second_level_bar"},"媒体服务",-1)})),v={class:"sdk_content",id:"sdk_content"},p=u((function(){return(0,t._)("h3",{id:"引入"},"引入",-1)})),f=u((function(){return(0,t._)("div",{class:"sdk_content_remarks"},"默认sdk会挂在到全局类似高德地图",-1)})),b=u((function(){return(0,t._)("h3",{id:"登陆"},"登陆",-1)})),k=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),S=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),h=u((function(){return(0,t._)("div",null,null,-1)})),N=u((function(){return(0,t._)("div",{class:"second_level_bar"},"群组",-1)})),y=u((function(){return(0,t._)("h3",{id:"获取所有群组"},"获取所有群组",-1)})),W=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),j=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),w=u((function(){return(0,t._)("h3",{id:"ids查看组信息"},"ids查看组信息",-1)})),T=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),I=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),C=u((function(){return(0,t._)("h3",{id:"创建群组"},"创建群组",-1)})),A=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),q=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),x=u((function(){return(0,t._)("h3",{id:"删除群组"},"删除群组",-1)})),D=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),O=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),U=u((function(){return(0,t._)("h3",{id:"编辑群组"},"编辑群组",-1)})),P=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),G=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),M=u((function(){return(0,t._)("h3",{id:"强拉到组"},"强拉到组",-1)})),L=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),B=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),R=u((function(){return(0,t._)("h3",{id:"查询在线且在组的uids"},"查询在线且在组的uids",-1)})),z=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Z=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),E=u((function(){return(0,t._)("div",{class:"second_level_bar"},"成员",-1)})),V=u((function(){return(0,t._)("h3",{id:"uids查询用户资料"},"uids查询用户资料",-1)})),H=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),F=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),K=u((function(){return(0,t._)("h3",{id:"uids筛选在线用户"},"uids筛选在线用户",-1)})),J=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Q=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),X=u((function(){return(0,t._)("h3",{id:"uid查询个人轨迹"},"uid查询个人轨迹",-1)})),Y=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),$=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),rr=u((function(){return(0,t._)("div",{class:"second_level_bar"},"组织架构",-1)})),nr=u((function(){return(0,t._)("h3",{id:"查询联系人组织架构"},"查询联系人组织架构",-1)})),er=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),tr=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),ur=u((function(){return(0,t._)("h3",{id:"查询组织下用户"},"查询组织下用户",-1)})),cr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),ar=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),ir=u((function(){return(0,t._)("div",{class:"second_level_bar"},"设备",-1)})),sr=u((function(){return(0,t._)("h3",{id:"用户Uids查设备详情"},"用户Uids查设备详情",-1)})),or=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),dr=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),lr=u((function(){return(0,t._)("h3",{id:"可视频设备系列"},"可视频设备系列",-1)})),gr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),_r=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),mr=u((function(){return(0,t._)("h3",{id:"查询机型图标"},"查询机型图标",-1)})),vr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),pr=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),fr=u((function(){return(0,t._)("div",{class:"second_level_bar"},"广播",-1)})),br=u((function(){return(0,t._)("h3",{id:"广播消息列表查询"},"广播消息列表查询",-1)})),kr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Sr=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),hr=u((function(){return(0,t._)("h3",{id:"广播消息转语音"},"广播消息转语音",-1)})),Nr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),yr=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Wr=u((function(){return(0,t._)("h3",{id:"创建广播消息"},"创建广播消息",-1)})),jr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),wr=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Tr=u((function(){return(0,t._)("div",{class:"second_level_bar"},"SOS消息",-1)})),Ir=u((function(){return(0,t._)("h3",{id:"SOS消息列表"},"SOS消息列表",-1)})),Cr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Ar=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),qr=u((function(){return(0,t._)("div",{class:"second_level_bar"},"对讲服务",-1)})),xr=u((function(){return(0,t._)("h3",{id:"切换群组"},"切换群组",-1)})),Dr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Or=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Ur=u((function(){return(0,t._)("h3",{id:"创建单呼"},"创建单呼",-1)})),Pr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Gr=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Mr=u((function(){return(0,t._)("h3",{id:"创建临时组"},"创建临时组",-1)})),Lr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Br=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Rr=u((function(){return(0,t._)("h3",{id:"临时组加人"},"临时组加人",-1)})),zr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Zr=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Er=u((function(){return(0,t._)("h3",{id:"临时组减人"},"临时组减人",-1)})),Vr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Hr=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Fr=u((function(){return(0,t._)("h3",{id:"挂断"},"挂断",-1)})),Kr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Jr=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Qr=u((function(){return(0,t._)("h3",{id:"gids添加监听"},"gids添加监听",-1)})),Xr=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Yr=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),$r=u((function(){return(0,t._)("h3",{id:"gids移除监听"},"gids移除监听",-1)})),rn=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),nn=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),en=u((function(){return(0,t._)("h3",{id:"gid监听发言组"},"gid监听发言组",-1)})),tn=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),un=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),cn=u((function(){return(0,t._)("h3",{id:"gids组广播添加"},"gids组广播添加",-1)})),an=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),sn=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),on=u((function(){return(0,t._)("h3",{id:"gids组广播删除"},"gids组广播删除",-1)})),dn=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),ln=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),gn=u((function(){return(0,t._)("h3",{id:"清空监听状态"},"清空监听状态",-1)})),_n=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),mn=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),vn=u((function(){return(0,t._)("h3",{id:"订阅对讲通知"},"订阅对讲通知",-1)})),pn=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),fn=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),bn=u((function(){return(0,t._)("h3",{id:"卸载对讲通知"},"卸载对讲通知",-1)})),kn=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Sn=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),hn=u((function(){return(0,t._)("h3",{id:"对讲通知数据结构"},"对讲通知数据结构",-1)})),Nn=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"数据结构",-1)})),yn=u((function(){return(0,t._)("div",{class:"second_level_bar"},"媒体服务",-1)})),Wn=u((function(){return(0,t._)("h3",{id:"开始发言"},"开始发言",-1)})),jn=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),wn=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Tn=u((function(){return(0,t._)("h3",{id:"结束发言"},"结束发言",-1)})),In=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Cn=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),An=u((function(){return(0,t._)("h3",{id:"获取插件版本"},"获取插件版本",-1)})),qn=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),xn=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Dn=u((function(){return(0,t._)("h3",{id:"订阅媒体通知"},"订阅媒体通知",-1)})),On=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Un=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Pn=u((function(){return(0,t._)("h3",{id:"卸载媒体通知"},"卸载媒体通知",-1)})),Gn=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Mn=u((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Ln=u((function(){return(0,t._)("h3",{id:"媒体通知数据结构"},"媒体通知数据结构",-1)})),Bn=u((function(){return(0,t._)("div",{class:"sdk_content_use"},"数据结构",-1)}));function Rn(r,n){var e=Object.keys(r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(r);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(r,n).enumerable}))),e.push.apply(e,t)}return e}function zn(r,n,e){return n in r?Object.defineProperty(r,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):r[n]=e,r}const Zn={components:{AzCompanyHeader:e(8305).Z},setup:function(){return function(r){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?Rn(Object(e),!0).forEach((function(n){zn(r,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(e)):Rn(Object(e)).forEach((function(n){Object.defineProperty(r,n,Object.getOwnPropertyDescriptor(e,n))}))}return r}({},{goAnchor:function(r){var n=document.querySelector(r);if(n){var e=document.getElementById("sdk_content"),t=n.offsetTop-50;e.scrollTop=t}}})}},En=(0,e(3744).Z)(Zn,[["render",function(r,n,e,u,Rn,zn){var Zn=(0,t.up)("az-company-header"),En=(0,t.up)("van-col"),Vn=(0,t.up)("highlightjs"),Hn=(0,t.up)("van-row");return(0,t.wg)(),(0,t.iD)("div",c,[(0,t.Wm)(Zn,{"title-name":"安正对讲SDK使用说明"}),(0,t.Wm)(Hn,{gutter:10},{default:(0,t.w5)((function(){return[(0,t.Wm)(En,{span:"4"},{default:(0,t.w5)((function(){return[(0,t._)("div",a,[(0,t._)("div",{class:"catalogue_row",onClick:n[0]||(n[0]=function(n){return r.goAnchor("#引入")})},"引入"),(0,t._)("div",{class:"catalogue_row",onClick:n[1]||(n[1]=function(n){return r.goAnchor("#登陆")})},"登陆"),i,(0,t._)("div",{class:"catalogue_row",onClick:n[2]||(n[2]=function(n){return r.goAnchor("#获取所有群组")})},"获取所有群组"),(0,t._)("div",{class:"catalogue_row",onClick:n[3]||(n[3]=function(n){return r.goAnchor("#ids查看组信息")})},"ids查看组信息"),(0,t._)("div",{class:"catalogue_row",onClick:n[4]||(n[4]=function(n){return r.goAnchor("#创建群组")})},"创建群组"),(0,t._)("div",{class:"catalogue_row",onClick:n[5]||(n[5]=function(n){return r.goAnchor("#删除群组")})},"删除群组"),(0,t._)("div",{class:"catalogue_row",onClick:n[6]||(n[6]=function(n){return r.goAnchor("#编辑群组")})},"编辑群组"),(0,t._)("div",{class:"catalogue_row",onClick:n[7]||(n[7]=function(n){return r.goAnchor("#强拉到组")})},"强拉到组"),(0,t._)("div",{class:"catalogue_row",onClick:n[8]||(n[8]=function(n){return r.goAnchor("#查询在线且在组的uids")})},"查询在线且在组的uids"),s,(0,t._)("div",{class:"catalogue_row",onClick:n[9]||(n[9]=function(n){return r.goAnchor("#uids查询用户资料")})},"uids查询用户资料"),(0,t._)("div",{class:"catalogue_row",onClick:n[10]||(n[10]=function(n){return r.goAnchor("#uids筛选在线用户")})},"uids筛选在线用户"),(0,t._)("div",{class:"catalogue_row",onClick:n[11]||(n[11]=function(n){return r.goAnchor("#uid查询个人轨迹")})},"uid查询个人轨迹"),o,(0,t._)("div",{class:"catalogue_row",onClick:n[12]||(n[12]=function(n){return r.goAnchor("#查询联系人组织架构")})},"查询联系人组织架构"),(0,t._)("div",{class:"catalogue_row",onClick:n[13]||(n[13]=function(n){return r.goAnchor("#查询组织下用户")})},"查询组织下用户"),d,(0,t._)("div",{class:"catalogue_row",onClick:n[14]||(n[14]=function(n){return r.goAnchor("#用户Uids查设备详情")})},"用户Uids查设备详情"),(0,t._)("div",{class:"catalogue_row",onClick:n[15]||(n[15]=function(n){return r.goAnchor("#可视频设备系列")})},"可视频设备系列"),(0,t._)("div",{class:"catalogue_row",onClick:n[16]||(n[16]=function(n){return r.goAnchor("#查询机型图标")})},"查询机型图标"),l,(0,t._)("div",{class:"catalogue_row",onClick:n[17]||(n[17]=function(n){return r.goAnchor("#广播消息列表查询")})},"广播消息列表查询"),(0,t._)("div",{class:"catalogue_row",onClick:n[18]||(n[18]=function(n){return r.goAnchor("#广播消息转语音")})},"广播消息转语音"),(0,t._)("div",{class:"catalogue_row",onClick:n[19]||(n[19]=function(n){return r.goAnchor("#创建广播消息")})},"创建广播消息"),g,(0,t._)("div",{class:"catalogue_row",onClick:n[20]||(n[20]=function(n){return r.goAnchor("#SOS消息列表")})},"SOS消息列表"),_,(0,t._)("div",{class:"catalogue_row",onClick:n[21]||(n[21]=function(n){return r.goAnchor("#切换群组")})},"切换群组"),(0,t._)("div",{class:"catalogue_row",onClick:n[22]||(n[22]=function(n){return r.goAnchor("#创建单呼")})},"创建单呼"),(0,t._)("div",{class:"catalogue_row",onClick:n[23]||(n[23]=function(n){return r.goAnchor("#创建临时组")})},"创建临时组"),(0,t._)("div",{class:"catalogue_row",onClick:n[24]||(n[24]=function(n){return r.goAnchor("#临时组加人")})},"临时组加人"),(0,t._)("div",{class:"catalogue_row",onClick:n[25]||(n[25]=function(n){return r.goAnchor("#临时组减人")})},"临时组减人"),(0,t._)("div",{class:"catalogue_row",onClick:n[26]||(n[26]=function(n){return r.goAnchor("#挂断")})},"挂断"),(0,t._)("div",{class:"catalogue_row",onClick:n[27]||(n[27]=function(n){return r.goAnchor("#gids添加监听")})},"gids添加监听"),(0,t._)("div",{class:"catalogue_row",onClick:n[28]||(n[28]=function(n){return r.goAnchor("#gids移除监听")})},"gids移除监听"),(0,t._)("div",{class:"catalogue_row",onClick:n[29]||(n[29]=function(n){return r.goAnchor("#gid监听发言组")})},"gid监听发言组"),(0,t._)("div",{class:"catalogue_row",onClick:n[30]||(n[30]=function(n){return r.goAnchor("#gids组广播添加")})},"gids组广播添加"),(0,t._)("div",{class:"catalogue_row",onClick:n[31]||(n[31]=function(n){return r.goAnchor("#gids组广播删除")})},"gids组广播删除"),(0,t._)("div",{class:"catalogue_row",onClick:n[32]||(n[32]=function(n){return r.goAnchor("#清空监听状态")})},"清空监听状态"),(0,t._)("div",{class:"catalogue_row",onClick:n[33]||(n[33]=function(n){return r.goAnchor("#订阅对讲通知")})},"订阅对讲通知"),(0,t._)("div",{class:"catalogue_row",onClick:n[34]||(n[34]=function(n){return r.goAnchor("#卸载对讲通知")})},"卸载对讲通知"),(0,t._)("div",{class:"catalogue_row",onClick:n[35]||(n[35]=function(n){return r.goAnchor("#对讲通知数据结构")})},"对讲通知数据结构"),m,(0,t._)("div",{class:"catalogue_row",onClick:n[36]||(n[36]=function(n){return r.goAnchor("#开始发言")})},"开始发言"),(0,t._)("div",{class:"catalogue_row",onClick:n[37]||(n[37]=function(n){return r.goAnchor("#结束发言")})},"结束发言"),(0,t._)("div",{class:"catalogue_row",onClick:n[38]||(n[38]=function(n){return r.goAnchor("#获取插件版本")})},"获取插件版本"),(0,t._)("div",{class:"catalogue_row",onClick:n[39]||(n[39]=function(n){return r.goAnchor("#订阅媒体通知")})},"订阅媒体通知"),(0,t._)("div",{class:"catalogue_row",onClick:n[40]||(n[40]=function(n){return r.goAnchor("#卸载媒体通知")})},"卸载媒体通知"),(0,t._)("div",{class:"catalogue_row",onClick:n[41]||(n[41]=function(n){return r.goAnchor("#媒体通知数据结构")})},"媒体通知数据结构")])]})),_:1}),(0,t.Wm)(En,{span:"20"},{default:(0,t.w5)((function(){return[(0,t._)("div",v,[p,(0,t._)("div",null,[f,(0,t.Wm)(Vn,{language:"javascript",code:"\r\nconst TalkServe = window.AzSdk.TalkServe;"}),b,k,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n// @params accessToken: '123456'; type: string; required: true; 说明: 统一认证令牌\r\nTalkServe.accessTokenLogin(accessToken).then((res) => {}).catch((err) => {});"}),S,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    companyId: 0; // 类型: Number; 说明: 企业ID\r\n    companyName: ''; // 类型: String; 说明: 企业名称\r\n    defaultGroupId: 0; // 类型: Number; 说明: 默认组id\r\n    departmentCode: ''; // 类型: String; 说明:\r\n    departmentId: 0; // 类型: Number; 说明: 部门id\r\n    departmentName: ''; // 类型: String; 说明: 部门名称\r\n    level: 0; // 类型: Number; 说明: 层级\r\n    loginName: ''; // 类型: String; 说明: 登陆用户名\r\n    maxTime: 0; // 类型: Number; 说明: 服务超时时间\r\n    permissions: ''; // 类型: String; 说明: 用户权限\r\n    userName: ''; // 类型: String; 说明: 用户名称\r\n    userToken: ''; // 类型: String; 说明: Token\r\n    userType: 0; // 类型: Number; 说明: 用户类型\r\n    userid: 0; // 类型: Number; 说明: 用户id\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),h,N,y,(0,t._)("div",null,[W,(0,t.Wm)(Vn,{language:"javascript",code:"TalkServe.queryAllGroup().then((res) => {}).catch((err) => {});"}),j,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [123,456,6789] // 类型: Array[number]; 说明: 群组id , 号分割\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),w,(0,t._)("div",null,[T,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n    @params groupIds: '123,456,789'; // 类型: String; required: true; 说明: 组id , 号分割\r\n*/\r\nTalkServe.queryGroupInfoIds(groupIds).then((res) => {}).catch((err) => {});"}),I,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [\r\n    {\r\n        id: 123, // 类型: Number; 说明: 组id\r\n        name: '名字', // 类型: String; 说明: 组名称\r\n        totalNum: 3,, // 类型: Number; 说明: 总人数\r\n        onlineNum: 3, // 类型: Number; 说明: 在线人数\r\n        onlineList: [123,456,789], // 类型: Array[number]; 说明: 在线ID列表\r\n        totalList: [123,456,789], // 类型: Array[number]; 说明: 总成员ID列表\r\n        remark: '备注', // 类型: String; 说明: 备注\r\n    }\r\n]\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}                        \r\n"})]),C,(0,t._)("div",null,[A,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\nparams: {\r\n    groupName: '群组名称',  // type: String, required: true; 说明: 群组名称;\r\n    openTape: fase, // type: Boolean, required: true; 说明: true_开启录音,false_关闭录音;\r\n    memberIds: '123,456', // type: String, required: false, 说明: 群组成员的账号ID , 号分割;\r\n}\r\n*/\r\nTalkServe.createGroup(params).then((res) => {}).catch((err) => {});"}),q,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: 123, // 类型: Number; 说明: 返回组id\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n} \r\n"})]),x,(0,t._)("div",null,[D,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* @params gid: 123, type: Number; required: true; 说明: 群组Id; */\r\nTalkServe.delGroup(gid).then((res) => {}).catch((err) => {});"}),O,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: '', // 类型: Number;\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n} \r\n"})]),U,(0,t._)("div",null,[P,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\nparams: {\r\n    gid: 123, // 类型: Number; required: true; 说明: 群组ID;\r\n    groupName: '群组名称', // 类型: String; required: false;  说明: 群组名称\r\n    openTape: false, // type: Boolean; required: true; 说明: true_开启录音,false_关闭录音;\r\n    addMemberIds: '123,456', // type: String; required: false; 说明: 添加成员的账号ID , 号分割(不可与delMemberIds存在重复ID)\r\n    delMemberIds: '123,456', // type: String; required: false; 说明: 删除成员的账号ID , 号分割(不可与addMemberIds存在重复ID)\r\n}\r\n*/\r\nTalkServe.modifyGroup(params).then((res) => {}).catch((err) => {});"}),G,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: '', // 类型: String;\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n} \r\n"})]),M,(0,t._)("div",null,[L,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n @params targetGid: 123, // 类型: Number; required: true; 说明: 群组ID;\r\n @params uids: '123,456', // 类型: String; required: true; 说明: 成员ids;\r\n*/\r\nTalkServe.forceChangeCallGroup(targetGid, uids).then((res) => {}).catch((err) => {});"}),B,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: '', // 类型: String;\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n} \r\n"})]),R,(0,t._)("div",null,[z,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n @params groupId: 123, // 类型: Number; required: true; 说明: 群组ID;\r\n*/\r\nTalkServe.queryOnlineInGroupUids(groupId).then((res) => {}).catch((err) => {});"}),Z,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [1,2,3], // 类型: Number[];\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n} \r\n"})]),E,V,(0,t._)("div",null,[H,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* @params userIds: '123,456,789', 类型: String; required: true; 说明: 用户uid , 号分割;举例: '1,2,3'; */\r\nTalkServe.queryUserInfoUids(userIds).then((res) => {}).catch((err) => {});"}),F,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [\r\n    {\r\n        id: 110, // 类型: Number; 说明: 用户id\r\n        name: '名字', // 类型: String; 说明: 名称\r\n        code: '账号', // 类型: String; 说明: 对讲账号\r\n        online: 0, // 类型: Number; 说明: 是否在线(0-离线,1-在线)\r\n        userType: 2, // 类型: Number; 说明: 用户类型(1-调度台,2-无屏,3-有屏，只有在线的用户才有)\r\n        location: { // 定位信息\r\n            lng: 45.123, // 类型: Number; 说明: 经度\r\n            lat: 123.1231, // 类型: Number; 说明: 纬度\r\n            upTime: 12312312123, // 类型: Number; 说明: 上传时间(毫秒值)\r\n            accuracy: 34, // 类型: Number; 说明: 定位精度\r\n        },\r\n        currGroup: { // 用户当前组\r\n            gid: 120, // 类型: Number; 说明: 用户当前组ID\r\n            type: 1, // 类型: Number; 说明: 用户当前组类型\r\n            name: '普通组', // 类型: String; 说明: 用户当前组名字\r\n        }\r\n    }\r\n]\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n} \r\n"})]),K,(0,t._)("div",null,[J,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* @params userIds: '123,456,789', 类型: String; required: true; 说明: 用户uid , 号分割;举例: '1,2,3'; */\r\nTalkServe.queryOnlineUids(userIds).then((res) => {}).catch((err) => {});"}),Q,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [111, 112]; // 类型: Array[number] 说明: 返回在线uid , 分割\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),X,(0,t._)("div",null,[Y,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n@params eduid: 123,  类型: Number; required: true; 说明: 被查询用户uid;\r\n@params startTime: 1667532012775, 类型: Number; required: true; 说明: 开始时间戳;\r\n@params endTime: 1667532012775, 类型: Number; required: true; 说明: 结束时间戳;\r\n*/\r\nTalkServe.queryTrajectoryPersonal(eduid, startTime, endTime).then((res) => {}).catch((err) => {});\r\n"}),$,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [\r\n    {\r\n        uploadTime: 1578294004295, // 类型: Number; 说明: 上传时间\r\n        lat: 30.208828, // 类型: Number; 说明: 纬度\r\n        lng: 120.149997, // 类型: Number; 说明: 经度\r\n        accuracy: 63.0, // 类型: Number; 说明: 定位精度\r\n    }\r\n];\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),rr,nr,(0,t._)("div",null,[er,(0,t.Wm)(Vn,{language:"javascript",code:" TalkServe.queryContactsOrgList().then((res) => {}).catch((err) => {});"}),tr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [\r\n    {\r\n        pid: 2, // 类型: Number; 说明: 父节点ID(0代表没有父节点是顶级节点)\r\n        pids: [0,1,2],\r\n        id: 3, // 类型: Number; 说明: 节点ID\r\n        name: '名字', // 类型: String; 说明: 节点名称\r\n        level: 2, // 类型: Number; 说明: 节点层级\r\n        order: 2, // 类型: Number; 说明: 节点排序权重\r\n    }\r\n]\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),ur,(0,t._)("div",null,[cr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* @params orgId: 123; 类型: Number; required: true; 说明: 组织ID;  */\r\nTalkServe.queryOrgIdToMemberList(orgId).then((res) => {}).catch((err) => {});"}),ar,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [123,456] // 类型: Array[number] 说明: 人员uid\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),ir,sr,(0,t._)("div",null,[or,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* @params uids: '123,456,789', 类型: String; required: true; 说明: 用户uid , 号分割;举例: '1,2,3'; */\r\nTalkServe.queryDevInfoUids(uids).then((res) => {}).catch((err) => {});"}),dr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [\r\n    {\r\n        uid: 213, // 类型: Number; 说明: 用户id\r\n        deviceId: 111, // 类型: Number; 说明: 设备ID\r\n        seriesCode: 'S', // 类型: String; 说明: 设备所属系列编码\r\n        modelCode: 'S100', // 类型: String; 说明: 设备机型编码\r\n        imei: '123123123,123123098098,0192380', // 类型: String; 说明: imei号\r\n        seriesName: 'S', // 类型: String; 说明: 设备所属系列名字\r\n        modelName: 'S100', // 类型: String; 说明: 设备机型名字\r\n        remark: '备注', // 类型: String; 说明: 备注\r\n    }\r\n];\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),lr,(0,t._)("div",null,[gr,(0,t.Wm)(Vn,{language:"javascript",code:"TalkServe.queryDevSeriesVideoList().then((res) => {}).catch((err) => {});"}),_r,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [\r\n    {\r\n        seriesName: 'S系列', // 类型: String; 说明: 机型系列名字\r\n        seriesCode: 'S', // 类型: String; 说明: 机型系列码\r\n    }\r\n];\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),mr,(0,t._)("div",null,[vr,(0,t.Wm)(Vn,{language:"javascript",code:" TalkServe.queryDeviceModelIconList().then((res) => {}).catch((err) => {});"}),pr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [\r\n    {\r\n        seriesCode: 'S系列', // 类型: String; 说明: 设备系列\r\n        modelCode: 'M', // 类型: String; 说明: 设备机型(可为空，若不为空则优先使用此设置)\r\n        icons: [\r\n            {\r\n                url: 'xxx/xxx/cc.icon', // 图标地址\r\n                icon: '在线图标', // 图标标志\r\n                type: 1, // 同设备不同状态, 1:在线 2:离线\r\n            },\r\n            {\r\n                url: 'xxx/xxx/cc.icon', // 图标地址\r\n                icon: '离线图标', // 图标标志\r\n                type: 2, // 同设备不同状态, 1:在线 2:离线\r\n            }\r\n        ]\r\n    }\r\n];\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),fr,br,(0,t._)("div",null,[kr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n@params type: 1, 类型: Number; required: true; 说明: 1:我发送;2:我接收;\r\n@params startTime: 1667532012775, 类型: Number; required: true; 说明: 开始时间戳;\r\n@params endTime: 1667532012775, 类型: Number; required: true; 说明: 结束时间戳;\r\n*/\r\nTalkServe.queryBroadCastMessageList(type, startTime, endTime).catch((err) => {});"}),Sr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: [\r\n    {\r\n        broadcastId: 1222, // 类型: Number; 说明: 广播id\r\n        type: 'mp3', // 类型: String; 说明: 文件类型\r\n        senderId: 571046, // 类型: Number; 说明: 发送者id\r\n        senderName: '调度台', // 类型: String; 说明: 发送者账号\r\n        messageTextInfo: '你好测试', // 类型: String; 说明: 广播文字内容\r\n        sendTime: 1667789267000, // 类型: Number; 说明: 发送时间\r\n        playTime: 1, // 类型: Number; 说明: 播放时间\r\n        size: 7164, // 类型: Number; 说明: 文件大小\r\n        url: 'http://xxx.mp3', // 类型: String; 说明: 播放地址\r\n        readNames: '大屏机S3,', // 类型: String; 说明: 已读账号名称 'xxx, xxx, xxx'\r\n        unreadNames: '安卓测试大屏,', // 未读账号名称 'xxx, xxx, xxx'\r\n        readCount: 1, // 类型: Number; 说明: 已读总数\r\n        unreadCount: 1, // 类型: Number; 说明: 未读总数\r\n        sendCount: 2, // 类型: Number; 说明: 发送总数\r\n        messageStatus: 1, // 类型: Number; 说明: 消息状态 0:未接收;1:已接收;2未读\r\n        uids: '559275,570896' // 类型: String; 说明: 所有接收账号ids '123, 456'\r\n    }\r\n]\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),hr,(0,t._)("div",null,[Nr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* @params content: '测试', // 类型: String; required: true; 说明：转换文字内容; */\r\nTalkServe.textToSpeech(content).then((res) => {}).catch((err) => {});"}),yr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: Blob() // 类型: Blob  说明: 返回一个Blob对象, 在新建广播参数file; 本地播放的话new Audio().src = window.URL.createObjectURL(res);\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),Wr,(0,t._)("div",null,[jr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\nparams: {\r\n    content: '', // 类型: String; required: true; 说明: 广播内容;\r\n    sendTimeType: 1, // 类型: Number; required: true; 说明: 1—即时发送; 2-定时发送;\r\n    sendTime: 1578294004295, // 类型: Number; required: true; 说明: 发送时间\r\n    uids: '123,456', // 类型: Number; required: true; 说明: 接收人,uid逗号分隔\r\n    playTime: 1, // 类型: Number; required: true; 说明: 播放时间\r\n    file: (binary), // 类型： Blob; required: true; 说明：文字消息转语音返回对象\r\n}\r\n*/\r\nTalkServe.createBroadcast(params).then((res) => {}).catch((err) => {});"}),wr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: '';\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),Tr,Ir,(0,t._)("div",null,[Cr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\nparams: {\r\n    currPage: 1, 类型: Number; required: true; 说明: 当前页;\r\n    limit: 10, 类型: Number; required: true; 说明: 页显示数;\r\n}\r\n*/\r\nTalkServe.querySosMessageList({currPage, limit}).then((res) => {}).catch((err) => {});"}),Ar,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    totalCount: 10, // type: Number 说明: 总记录数\r\n    pageSize: 10, // type: Number 说明: 每页大小\r\n    totalPage: 11, // type: Number 说明: 总页数\r\n    currPage: 11, // type: Number 说明: 当前页\r\n    list: [ // // type: Array 说明: 消息列表\r\n        {\r\n            sosId: 123, // type: Number 说明: SOS消息ID\r\n            recId: 123, // type: Number 说明: 接受者ID\r\n            senderId: 123, // type: Number 说明: 发送者ID\r\n            senderName: '张三', // type: String 说明: 发送者名字\r\n            sendTime: 1667811375000, // type: Number 说明: 发送时间\r\n            address: '浙江省杭州市fxxx游城', // type: String 说明: 地理位置\r\n            lng: 1212.111, // type: Number 说明: 经度\r\n            lat: 1111.1111, // type: Number 说明: 纬度\r\n            messageStatus: 0, // type: Number 说明: 0:未读; 2:已读\r\n        }\r\n    ]\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '', // 类型: String; 说明: 描述\r\n}\r\n"})]),qr,xr,(0,t._)("div",null,[Dr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n    @params groupId: 1, // 类型: Number; required: true; 说明: 组id;\r\n    @params type: 1, // 类型: Number; required: false, 说明: 群组类型, 1_普通组; 4_单呼; 5_临时组;\r\n*/\r\nTalkServe.cutGroup(groupId, type).then((res) => {}).catch((err) => {});"}),Or,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    gid: 63138184, // type: Number; 说明: 被叫组ID\r\n    stat: 2, // type: Number; 说明: 状态(0-通话结束;1-正在呼叫;2-正在通话)\r\n    type: 1, // type: Number; 说明: 1:对讲;2会议;3:广播;4:单呼;5:临时组;6:监听\r\n    cid: 703085, // type: Number; 说明: 会话中每个成员唯一\r\n    sid: 63138184, // type: Number; 说明: 会话ID(全局唯一: 信令服务器ID+会话建立时间戳)\r\n}\r\n/* 信令返回: 8003 */\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '切组指令发送失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Ur,(0,t._)("div",null,[Pr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* \r\n    提示：创建单呼组前首先要在一个固定组\r\n    @params  memberIds: '123' type: String; required: true; 说明: 成员id;\r\n*/\r\nTalkServe.singleCallCreate(memberId).then((res) => {}).catch((err) => {});"}),Gr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: 63138184; 类型: Number 说明: 单呼组id\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '切组指令发送失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Mr,(0,t._)("div",null,[Lr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* \r\n    提示：创建临时组前首先要在一个固定组\r\n    @params memberIds: '123,456' 类型: String; required: true; 说明: 成员ids;\r\n*/\r\nTalkServe.temporaryGroupCreate(memberIds).then((res) => {}).catch((err) => {});\r\n"}),Br,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    gid: 123,  类型: Number 说明: 单呼组id\r\n    stat: 2, // type: Number; 说明: 状态(0-通话结束;1-正在呼叫;2-正在通话)\r\n    type: 5, // type: Number; 说明: 1:对讲;2会议;3:广播;4:单呼;5:临时组;6:监听\r\n    cid: 703085, // type: Number; 说明: 会话中每个成员唯一\r\n    sid: 63138184, // type: Number; 说明: 会话ID(全局唯一: 信令服务器ID+会话建立时间戳)\r\n   \r\n};\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '切组指令发送失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Rr,(0,t._)("div",null,[zr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* @params memberIds: '123,456' 类型: String; required: true; 说明: 成员ids; */\r\nTalkServe.temporaryGroupAddMembers(memberIds).then((res) => {}).catch((err) => {});\r\n"}),Zr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: ''; // 类型: String; 说明: 表示指令发送成功, 成员进入或离开情况在对讲通知中去拦截;\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '切组指令发送失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Er,(0,t._)("div",null,[Vr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* @params memberIds: '123,456' 类型: String; required: true; 说明: 成员ids; */\r\nTalkServe.temporaryGroupDelMembers(memberIds).then((res) => {}).catch((err) => {});\r\n"}),Hr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: ''; // 类型: String; 说明: 表示指令发送成功, 成员进入或离开情况在对讲通知中去拦截;\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '切组指令发送失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Fr,(0,t._)("div",null,[Kr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 提示: 挂断主要指的是挂断单呼和临时组, 挂断后建议切入一个固定组 */\r\nTalkServe.hangUp().then((res) => {}).catch((err) => {});"}),Jr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '成功', // 类型: String; 说明: 描述\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Qr,(0,t._)("div",null,[Xr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n    流程: 1.从tcp服务获取组语音的url和端口; 2.本地插件订阅组语音端口和url;\r\n    备注: 因为要从两个ws服务横跳, 需要一个成功后再处理一个，所以性能比较低, 当下处理监听或已在监听状态的时候不能操作其它对讲功能(切组,创建单呼, 创建临时组, 挂断);\r\n    建议: gids 不要一次性传太多, 测试环境20个组大概5秒成功;\r\n    提示: 监听成功后记得设置发言组;\r\n    @params gids: '123,456'; 类型: String; required: true; 说明: 组id;\r\n*/\r\nTalkServe.monitorAdd(gids).then((res) => {}).catch((err) => {});"}),Yr,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    success: [123, 456], // 类型: Array; 说明: 成功的gid\r\n    all: [123, 456], // 类型: Array; 说明: 当前所有监听的gid\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),$r,(0,t._)("div",null,[rn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n    提示: 监听删除,后如果刚好是发言组的话, 要重新指定发言组;\r\n    @params gids: '123,456'; 类型: String; required: true; 说明: 组id;\r\n*/\r\nTalkServe.monitorDel(gids).then((res) => {}).catch((err) => {});"}),nn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    success: [123, 456], // 类型: Array; 说明: 成功的gid\r\n    all: [123, 456], // 类型: Array; 说明: 当前所有监听的gid, 当all为[]空数组时,自动退出监听状态;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),en,(0,t._)("div",null,[tn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n    备注: 修改再监听状态下的发言组;\r\n    @params gid: '123'; 类型: String; required: true; 说明: 组id;\r\n*/\r\nTalkServe.monitorSpeakGroup(gid).then((res) => {}).catch((err) => {});"}),un,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  '123', // 类型: String; 说明: 返回设置组id\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),cn,(0,t._)("div",null,[an,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n    流程: 1.从tcp服务获取组语音的url和端口; 2.本地插件订阅组语音端口和url; 3.本地插件绑定发言组\r\n    备注: 因为要从两个ws服务横跳, 需要一个成功后再处理一个，所以性能比较低, 当下处理监听或已在监听状态的时候不能操作其它对讲功能(切组,创建单呼, 创建临时组, 挂断);\r\n    建议: gids 不要一次性传太多;\r\n    @params gids: '123,456'; 类型: String; required: true; 说明: 组id;\r\n*/\r\nTalkServe.groupBroadcastAdd(gids).then((res) => {}).catch((err) => {});"}),sn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    success: [123, 456], // 类型: Array; 说明: 成功的gid\r\n    all: [123, 456], // 类型: Array; 说明: 当前所有监听的gid\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),on,(0,t._)("div",null,[dn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n    @params gids: '123,456'; 类型: String; required: true; 说明: 组id;\r\n*/\r\nTalkServe.groupBroadcastDel(gids).then((res) => {}).catch((err) => {});"}),ln,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    success: [123, 456], // 类型: Array; 说明: 成功的gid\r\n    all: [123, 456], // 类型: Array; 说明: 当前所有监听的gid, 当all为[]空数组时,自动退出监听状态;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),gn,(0,t._)("div",null,[_n,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/*\r\n    提示：异常恢复,或本地调试时使用;\r\n    流程: 清空当前监听拦截状态和当前监听群组, 并调用了rtp媒体插件服务清空所有监听,且清空所有发言组;\r\n*/\r\nTalkServe.monitorResetState().then((res) => {}).catch((err) => {});"}),mn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  '' // 类型: String; 说明: 无\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),vn,(0,t._)("div",null,[pn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* \r\n    提醒：一个名称只会对应一个回调函数,如果同名的话直接覆盖(防止单页面应用,热更新反复存入新的回调函数, 导致内存泄漏)\r\n    @params  noticeName: '123' type: String; required: true; 说明: 订阅名称;\r\n    @params  callback: () => {} type: Function; required: true; 说明: 回调函数; \r\n*/\r\nTalkServe.subscribeTcpNotice(noticeName, callback).then((res) => {}).catch((err) => {});\r\n"}),fn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '订阅成功', // 类型: String; 说明: 描述\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '订阅失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),bn,(0,t._)("div",null,[kn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* @params  noticeName: '123' type: String; required: true; 说明: 订阅名称; */\r\nTalkServe.subscribeTcpNoticeUn(noticeName).then((res) => {}).catch((err) => {});\r\n"}),Sn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '卸载成功', // 类型: String; 说明: 描述\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '卸载失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),hn,(0,t._)("div",null,[Nn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* code定义 \r\n    0_对讲服务未连接或已断开; 1_对讲服务接入成功; 2_事件推送;\r\n*/\r\n/* 基本消息体 */\r\nmsg: {\r\n    code: 0, 类型: Number 说明: 通知code\r\n    message: '', 类型: String 说明: 描述\r\n    body?: {}, 类型: Object 说明: 消息体;\r\n    /*body结构{\r\n        ...,\r\n        stat: 2, // type: Number; 说明: 状态(0-通话结束;1-正在呼叫;2-正在通话)\r\n        err: 0, // type: Number; 说明: 错误码(0-成功其他失败，参见错误码)\r\n        cid: 123, // type: Number; 说明: 会话中每个成员唯一\r\n        sid: 123, // type: Number; 说明: 会话ID(全局唯一: 信令服务器ID+会话建立时间戳)\r\n        aip: '120.27.202.5', // type: String; 说明: 语音收发IP\r\n        aport: 11002, // type: Number; 说明: 语音收发PORT\r\n        atype: 18, // type: Number; 说明: 音频种类(0-PCMU 8-PCMA 18-G729 3-GSM)\r\n        ...\r\n    }*/\r\n}\r\n/* msg.code === 0 */\r\nmsg: {\r\n    code: 0, 类型: Number 说明: 通知code\r\n    message: '对讲服务未连接或已断开', 类型: String 说明: 对讲服务未连接或已断开\r\n}\r\n/* msg.code === 1 */\r\nmsg: {\r\n    code: 1, 类型: Number 说明: 通知code\r\n    message: '媒体插件接入成功', 类型: String 说明: 对讲服务接入成功\r\n}\r\n/* msg.code === 2 */\r\nmsg: {\r\n    code: 2,\r\n    message: '当前进组信息',\r\n    body: {\r\n        /* event定义: \r\n            'enter_group'_进组信息;\r\n            'recovery_connect'_恢复之前连接\r\n            'singleCall_hangUp'_单呼被挂断\r\n            'member_leave'_人员离开\r\n            'member_join'_人员加入\r\n            'group_add'_群组新增\r\n            'group_break'_群组解散\r\n            'group_forcedPull'_被强拉进组\r\n        */\r\n        /* 'enter_group' */\r\n        event: 'enter_group',\r\n        eventName: '进组信息',\r\n        gid: 63138184,\r\n        stat: 2,\r\n        cid: 705659,\r\n        sid: 63138184,\r\n        type: 1,\r\n        /* 'recovery_connect' */\r\n        event: 'recovery_connect',\r\n        eventName: '恢复之前连接',\r\n        gid: 63138184,\r\n        stat: 2,\r\n        cid: 705659,\r\n        sid: 63138184,\r\n        type: 1,\r\n        /* 'singleCall_hangUp' */\r\n        event: 'singleCall_hangUp',\r\n        eventName: '单呼被挂断',\r\n        gid: 63308819,\r\n        /* 'member_leave' */\r\n        event: 'member_leave',\r\n        eventName: '人员离开',\r\n        uid: 559275,\r\n        gid: 63138184,\r\n        type: 1,\r\n        /* 'member_join' */\r\n        event: 'member_join',\r\n        eventName: '人员加入',\r\n        uid: 559275,\r\n        gid: 63138184,\r\n         type: 1,\r\n        /* 'group_add' */\r\n        event: 'group_add',\r\n        eventName: '群组新增',\r\n        gid: 63138184,\r\n        /* 'group_break' */\r\n        event: 'group_break',\r\n        eventName: '群组解散',\r\n        gid: 63138184,\r\n        /* 'group_forcedPull' */\r\n        event: 'group_forcedPull',\r\n        eventName: '强拉进组',\r\n        gid: 63138184,\r\n    }\r\n}\r\n"})]),yn,Wn,(0,t._)("div",null,[jn,(0,t.Wm)(Vn,{language:"javascript",code:"TalkServe.speakStart().then((res) => {}).catch((err) => {});"}),wn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '成功', // 类型: String; 说明: 描述\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Tn,(0,t._)("div",null,[In,(0,t.Wm)(Vn,{language:"javascript",code:"TalkServe.speakEnd().then((res) => {}).catch((err) => {});"}),Cn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '成功', // 类型: String; 说明: 描述\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),An,(0,t._)("div",null,[qn,(0,t.Wm)(Vn,{language:"javascript",code:"TalkServe.plugVersion().then((res) => {}).catch((err) => {});"}),xn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '成功', // 类型: String; 说明: 描述\r\n    version: '2.0.1.4', // 类型: String 说明：版本号\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Dn,(0,t._)("div",null,[On,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* \r\n    提醒：一个名称只会对应一个回调函数,如果同名的话直接覆盖(防止单页面应用开发，热更新反复存入新的回调函数, 导致内存泄漏)\r\n    @params  noticeName: '123' type: String; required: true; 说明: 订阅名称;\r\n    @params  callback: () => {} type: Function; required: true; 说明: 回调函数; \r\n*/\r\nTalkServe.subscribeRtpNotice(noticeName, callback).then((res) => {}).catch((err) => {});\r\n"}),Un,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '订阅成功', // 类型: String; 说明: 描述\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '订阅失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Pn,(0,t._)("div",null,[Gn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* @params  noticeName: '123' type: String; required: true; 说明: 订阅名称; */\r\nTalkServe.subscribeRtpNoticeUn(noticeName).then((res) => {}).catch((err) => {});\r\n"}),Mn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '卸载成功', // 类型: String; 说明: 描述\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '卸载失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Ln,(0,t._)("div",null,[Bn,(0,t.Wm)(Vn,{language:"javascript",code:"\r\n/* code定义 \r\n0_媒体服务未连接或已断开; 1_媒体服务接入成功; 2_事件推送;\r\n*/\r\n/* 基本消息体 */\r\nmsg: {\r\n    code: 0, 类型: Number 说明: 通知code\r\n    message: '', 类型: String 说明: 描述\r\n    body?: {}, 类型: Object 说明: 消息体;\r\n}\r\n/* msg.code === 0 */\r\nmsg: {\r\n    code: 0, 类型: Number 说明: 通知code\r\n    message: '', 类型: String 说明: 媒体服务未连接或已断开\r\n}\r\n/* msg.code === 1 */\r\nmsg: {\r\n    code: 1, 类型: Number 说明: 通知code\r\n    message: '媒体插件接入成功', 类型: String 说明: 媒体服务接入成功\r\n}\r\n/* msg.code === 2 */\r\nmsg: {\r\n    code: 2,\r\n    message: '事件推送',\r\n    body: {\r\n        /* event定义: 'received_speak'_收到发言; */\r\n        event: 'received_speak', 类型: String 说明: 事件\r\n        eventName: '收到发言', 类型: String 说明: 收到发言\r\n        state: 1, 类型: Number 说明: 1_发言 0_结束发言\r\n        uid: 123, 类型: Number 说明: 成员id\r\n    }\r\n}\r\n"})])])]})),_:1})]})),_:1})])}],["__scopeId","data-v-6a088657"]])}}]);