"use strict";(self.webpackChunkts_vue=self.webpackChunkts_vue||[]).push([[333],{5333:(r,n,e)=>{e.r(n),e.d(n,{default:()=>vn});var t=e(5393),i=function(r){return(0,t.dD)("data-v-302fc3d3"),r=r(),(0,t.Cn)(),r},s={class:"fn_sdk_document"},o={class:"catalogue"},c=i((function(){return(0,t._)("div",{class:"second_level_bar"},"日志",-1)})),a=i((function(){return(0,t._)("div",{class:"second_level_bar"},"会议",-1)})),u=i((function(){return(0,t._)("div",{class:"second_level_bar"},"普通呼叫",-1)})),d=i((function(){return(0,t._)("div",{class:"second_level_bar"},"来电接听",-1)})),l=i((function(){return(0,t._)("div",{class:"second_level_bar"},"通知",-1)})),g=i((function(){return(0,t._)("div",{class:"second_level_bar"},"其它方法",-1)})),_={class:"sdk_content",id:"sdk_content"},m=i((function(){return(0,t._)("h3",{id:"引入"},"引入",-1)})),v=i((function(){return(0,t._)("div",{class:"sdk_content_remarks"},"默认sdk会挂在到全局类似高德地图",-1)})),f=i((function(){return(0,t._)("h3",{id:"token登陆"},"token登陆",-1)})),p=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),S=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),h=i((function(){return(0,t._)("h3",{id:"开启打印Sip日志"},"开启打印Sip日志",-1)})),b=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),k=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),A=i((function(){return(0,t._)("h3",{id:"关闭打印Sip日志"},"关闭打印Sip日志",-1)})),C=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),N=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),I=i((function(){return(0,t._)("div",{class:"second_level_bar"},"会议",-1)})),W=i((function(){return(0,t._)("h3",{id:"创建会议"},"创建会议",-1)})),w=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"消息类型列表",-1)})),y=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),j=i((function(){return(0,t._)("h3",{id:"进入会议"},"进入会议",-1)})),E=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"消息类型列表",-1)})),O=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),V=i((function(){return(0,t._)("h3",{id:"关闭会议"},"关闭会议",-1)})),M=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),D=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),T=i((function(){return(0,t._)("h3",{id:"会议详情"},"会议详情",-1)})),q=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),U=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),L=i((function(){return(0,t._)("h3",{id:"修改会议基本信息"},"修改会议基本信息",-1)})),R=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),P=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),F=i((function(){return(0,t._)("h3",{id:"修改会议布局"},"修改会议布局",-1)})),H=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),B=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),x=i((function(){return(0,t._)("h3",{id:"会议成员邀请"},"会议成员邀请",-1)})),z=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),G=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Z=i((function(){return(0,t._)("h3",{id:"会议成员删除"},"会议成员删除",-1)})),J=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Y=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),K=i((function(){return(0,t._)("h3",{id:"会议成员禁言"},"会议成员禁言",-1)})),Q=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),$=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),X=i((function(){return(0,t._)("h3",{id:"会议成员取消禁言"},"会议成员取消禁言",-1)})),rr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),nr=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),er=i((function(){return(0,t._)("h3",{id:"会议成员禁听"},"会议成员禁听",-1)})),tr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),ir=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),sr=i((function(){return(0,t._)("h3",{id:"会议成员取消禁听"},"会议成员取消禁听",-1)})),or=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),cr=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),ar=i((function(){return(0,t._)("h3",{id:"会议指定看谁"},"会议指定看谁",-1)})),ur=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),dr=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),lr=i((function(){return(0,t._)("h3",{id:"会议给某成员发消息"},"会议给某成员发消息",-1)})),gr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),_r=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),mr=i((function(){return(0,t._)("h3",{id:"会议给所有成员广播消息"},"会议给所有成员广播消息",-1)})),vr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),fr=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),pr=i((function(){return(0,t._)("h3",{id:"会议成员禁看"},"会议成员禁看",-1)})),Sr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),hr=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),br=i((function(){return(0,t._)("h3",{id:"会议成员取消禁看"},"会议成员取消禁看",-1)})),kr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Ar=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Cr=i((function(){return(0,t._)("h3",{id:"会议成员打开摄像头"},"会议成员打开摄像头",-1)})),Nr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Ir=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Wr=i((function(){return(0,t._)("h3",{id:"会议成员关闭摄像头"},"会议成员关闭摄像头",-1)})),wr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),yr=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),jr=i((function(){return(0,t._)("h3",{id:"会议拒绝接听"},"会议拒绝接听",-1)})),Er=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Or=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Vr=i((function(){return(0,t._)("div",{class:"second_level_bar"},"普通呼叫",-1)})),Mr=i((function(){return(0,t._)("h3",{id:"普通语音呼叫"},"普通语音呼叫",-1)})),Dr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Tr=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),qr=i((function(){return(0,t._)("h3",{id:"普通视频呼叫"},"普通视频呼叫",-1)})),Ur=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Lr=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Rr=i((function(){return(0,t._)("h3",{id:"监控呼叫"},"监控呼叫",-1)})),Pr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Fr=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Hr=i((function(){return(0,t._)("div",{class:"second_level_bar"},"来电接听",-1)})),Br=i((function(){return(0,t._)("h3",{id:"会话接听"},"会话接听",-1)})),xr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),zr=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Gr=i((function(){return(0,t._)("div",{class:"second_level_bar"},"通知",-1)})),Zr=i((function(){return(0,t._)("h3",{id:"订阅通知"},"订阅通知",-1)})),Jr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),Yr=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Kr=i((function(){return(0,t._)("h3",{id:"卸载通知"},"卸载通知",-1)})),Qr=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),$r=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),Xr=i((function(){return(0,t._)("h3",{id:"通知数据结构"},"通知数据结构",-1)})),rn=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"数据结构",-1)})),nn=i((function(){return(0,t._)("div",{class:"second_level_bar"},"其它方法",-1)})),en=i((function(){return(0,t._)("h3",{id:"获取媒体采集设备"},"获取媒体采集设备",-1)})),tn=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),sn=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),on=i((function(){return(0,t._)("h3",{id:"获取媒体采集设备"},"指定音频采集设备",-1)})),cn=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),an=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)})),un=i((function(){return(0,t._)("h3",{id:"指定视频采集设备"},"指定视频采集设备",-1)})),dn=i((function(){return(0,t._)("div",{class:"sdk_content_use"},"使用方式",-1)})),ln=i((function(){return(0,t._)("div",{class:"sdk_content_return"},"返回参数",-1)}));function gn(r,n){var e=Object.keys(r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(r);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(r,n).enumerable}))),e.push.apply(e,t)}return e}function _n(r,n,e){return n in r?Object.defineProperty(r,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):r[n]=e,r}const mn={components:{AzCompanyHeader:e(8305).Z},setup:function(){return function(r){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?gn(Object(e),!0).forEach((function(n){_n(r,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(e)):gn(Object(e)).forEach((function(n){Object.defineProperty(r,n,Object.getOwnPropertyDescriptor(e,n))}))}return r}({},{goAnchor:function(r){var n=document.querySelector(r);if(n){var e=document.getElementById("sdk_content"),t=n.offsetTop-50;e.scrollTop=t}}})}},vn=(0,e(3744).Z)(mn,[["render",function(r,n,e,i,gn,_n){var mn=(0,t.up)("az-company-header"),vn=(0,t.up)("a-col"),fn=(0,t.up)("highlightjs"),pn=(0,t.up)("a-row");return(0,t.wg)(),(0,t.iD)("div",s,[(0,t.Wm)(mn,{"title-name":"安正AudioVideo使用说明"}),(0,t.Wm)(pn,{gutter:10},{default:(0,t.w5)((function(){return[(0,t.Wm)(vn,{span:"4"},{default:(0,t.w5)((function(){return[(0,t._)("div",o,[(0,t._)("div",{class:"catalogue_row",onClick:n[0]||(n[0]=function(n){return r.goAnchor("#引入")})},"引入"),(0,t._)("div",{class:"catalogue_row",onClick:n[1]||(n[1]=function(n){return r.goAnchor("#token登陆")})},"token登陆"),c,(0,t._)("div",{class:"catalogue_row",onClick:n[2]||(n[2]=function(n){return r.goAnchor("#开启打印Sip日志")})},"开启打印Sip日志"),(0,t._)("div",{class:"catalogue_row",onClick:n[3]||(n[3]=function(n){return r.goAnchor("#关闭打印Sip日志")})},"关闭打印Sip日志"),a,(0,t._)("div",{class:"catalogue_row",onClick:n[4]||(n[4]=function(n){return r.goAnchor("#创建会议")})},"创建会议"),(0,t._)("div",{class:"catalogue_row",onClick:n[5]||(n[5]=function(n){return r.goAnchor("#进入会议")})},"进入会议"),(0,t._)("div",{class:"catalogue_row",onClick:n[6]||(n[6]=function(n){return r.goAnchor("#关闭会议")})},"关闭会议"),(0,t._)("div",{class:"catalogue_row",onClick:n[7]||(n[7]=function(n){return r.goAnchor("#会议详情")})},"会议详情"),(0,t._)("div",{class:"catalogue_row",onClick:n[8]||(n[8]=function(n){return r.goAnchor("#修改会议基本信息")})},"修改会议基本信息"),(0,t._)("div",{class:"catalogue_row",onClick:n[9]||(n[9]=function(n){return r.goAnchor("#修改会议布局")})},"修改会议布局"),(0,t._)("div",{class:"catalogue_row",onClick:n[10]||(n[10]=function(n){return r.goAnchor("#会议成员邀请")})},"会议成员邀请"),(0,t._)("div",{class:"catalogue_row",onClick:n[11]||(n[11]=function(n){return r.goAnchor("#会议成员删除")})},"会议成员删除"),(0,t._)("div",{class:"catalogue_row",onClick:n[12]||(n[12]=function(n){return r.goAnchor("#会议成员禁言")})},"会议成员禁言"),(0,t._)("div",{class:"catalogue_row",onClick:n[13]||(n[13]=function(n){return r.goAnchor("#会议成员取消禁言")})},"会议成员取消禁言"),(0,t._)("div",{class:"catalogue_row",onClick:n[14]||(n[14]=function(n){return r.goAnchor("#会议成员禁听")})},"会议成员禁听"),(0,t._)("div",{class:"catalogue_row",onClick:n[15]||(n[15]=function(n){return r.goAnchor("#会议成员取消禁听")})},"会议成员取消禁听"),(0,t._)("div",{class:"catalogue_row",onClick:n[16]||(n[16]=function(n){return r.goAnchor("#会议指定看谁")})},"会议指定看谁"),(0,t._)("div",{class:"catalogue_row",onClick:n[17]||(n[17]=function(n){return r.goAnchor("#会议给某成员发消息")})},"会议给某成员发消息"),(0,t._)("div",{class:"catalogue_row",onClick:n[18]||(n[18]=function(n){return r.goAnchor("#会议给所有成员广播消息")})},"会议给所有成员广播消息"),(0,t._)("div",{class:"catalogue_row",onClick:n[19]||(n[19]=function(n){return r.goAnchor("#会议成员禁看")})},"会议成员禁看"),(0,t._)("div",{class:"catalogue_row",onClick:n[20]||(n[20]=function(n){return r.goAnchor("#会议成员取消禁看")})},"会议成员取消禁看"),(0,t._)("div",{class:"catalogue_row",onClick:n[21]||(n[21]=function(n){return r.goAnchor("#会议成员打开摄像头")})},"会议成员打开摄像头"),(0,t._)("div",{class:"catalogue_row",onClick:n[22]||(n[22]=function(n){return r.goAnchor("#会议成员关闭摄像头")})},"会议成员关闭摄像头"),(0,t._)("div",{class:"catalogue_row",onClick:n[23]||(n[23]=function(n){return r.goAnchor("#会议拒绝接听")})},"会议拒绝接听"),u,(0,t._)("div",{class:"catalogue_row",onClick:n[24]||(n[24]=function(n){return r.goAnchor("#普通语音呼叫")})},"普通语音呼叫"),(0,t._)("div",{class:"catalogue_row",onClick:n[25]||(n[25]=function(n){return r.goAnchor("#普通视频呼叫")})},"普通视频呼叫"),(0,t._)("div",{class:"catalogue_row",onClick:n[26]||(n[26]=function(n){return r.goAnchor("#监控呼叫")})},"监控呼叫"),d,(0,t._)("div",{class:"catalogue_row",onClick:n[27]||(n[27]=function(n){return r.goAnchor("#会话接听")})},"会话接听"),l,(0,t._)("div",{class:"catalogue_row",onClick:n[28]||(n[28]=function(n){return r.goAnchor("#订阅通知")})},"订阅通知"),(0,t._)("div",{class:"catalogue_row",onClick:n[29]||(n[29]=function(n){return r.goAnchor("#卸载通知")})},"卸载通知"),(0,t._)("div",{class:"catalogue_row",onClick:n[30]||(n[30]=function(n){return r.goAnchor("#通知数据结构")})},"通知数据结构"),g,(0,t._)("div",{class:"catalogue_row",onClick:n[31]||(n[31]=function(n){return r.goAnchor("#获取媒体采集设备")})},"获取媒体采集设备"),(0,t._)("div",{class:"catalogue_row",onClick:n[32]||(n[32]=function(n){return r.goAnchor("#指定音频采集设备")})},"指定音频采集设备"),(0,t._)("div",{class:"catalogue_row",onClick:n[33]||(n[33]=function(n){return r.goAnchor("#指定视频采集设备")})},"指定视频采集设备")])]})),_:1}),(0,t.Wm)(vn,{span:"20"},{default:(0,t.w5)((function(){return[(0,t._)("div",_,[m,(0,t._)("div",null,[v,(0,t.Wm)(fn,{language:"javascript",code:"const AudioVideoServe = window.AzSdk.AudioVideoServe;"}),f,p,(0,t.Wm)(fn,{language:"javascript",code:"\r\n// @params accessToken: '123456'; type: String; required: true;  说明: 统一认证令牌;\r\nAudioVideoServe.accessTokenLogin(accessToken).then(() => {}).catch(() => {});\r\n                        "}),S,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres:  {\r\n    code: 1, // 类型: Number; 说明: 成功编码;\r\n    message: '登陆指令发送成功', // 类型: String; 说明: 描述;\r\n    account: 'azText', // 类型: String; 说明: 账号;\r\n    id: 123456, // 类型: Number; 说明: id;\r\n    name: '马儿', // 类型: String; 说明: 姓名; \r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}  \r\n                           "})]),h,(0,t._)("div",null,[b,(0,t.Wm)(fn,{language:"javascript",code:"AudioVideoServe.debugSipEnable().then((res) => {}).catch((err) => {});"}),k,(0,t.Wm)(fn,{language:"javascript",code:"\r\n    /* 成功参数说明*/\r\n    res:  {\r\n        code: 1, // 类型: Number; 说明: 成功编码;\r\n        message: '开启成功', // 类型: String; 说明: 描述;\r\n    }\r\n    /* 失败参数说明: */\r\n    err: {\r\n        code: 0, // 类型: Number; 说明: 错误编码\r\n        message: '失败', // 类型: String; 说明: 描述\r\n    }  \r\n                            "})]),A,(0,t._)("div",null,[C,(0,t.Wm)(fn,{language:"javascript",code:"AudioVideoServe.debugSipDisable().then((res) => {}).catch((err) => {});"}),N,(0,t.Wm)(fn,{language:"javascript",code:"\r\n    /* 成功参数说明*/\r\n    res:  {\r\n        code: 1, // 类型: Number; 说明: 成功编码;\r\n        message: '关闭成功', // 类型: String; 说明: 描述;\r\n    }\r\n    /* 失败参数说明: */\r\n    err: {\r\n        code: 0, // 类型: Number; 说明: 错误编码\r\n        message: '失败', // 类型: String; 说明: 描述\r\n    }\r\n    "})]),I,W,(0,t._)("div",null,[w,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n    @params {\r\n        title: '会议标题', // 类型: String; required: false; 说明: 会议标题;\r\n        type: 'AUDIO', // 类型: String; required: true; 说明: 'AUDIO'_语音会议, 'VIDEO'_视频会议;\r\n        members: '123,456', //  类型: String; required: false; 说明: 会议成员sip账号逗号分隔, 最大数量200;\r\n        host: '', // 类型: String; required: false; 说明: 会议主持人;\r\n    }\r\n*/\r\nAudioVideoServe.meetingCreate({title, type, host}).then((res) => {}).catch((err) => {});\r\n"}),y,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    id: '20221226090305114401000001', // 类型： String 说明: 会议id\r\n    title: '标题', // 类型: String 说明: 会议标题\r\n    type: 'VIDEO', // 类型: String 说明: 会议类型,AUDIO_语音会议; VIDEO_视频会议;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n} \r\n"})]),j,(0,t._)("div",null,[E,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n    @params id: 会议id\r\n*/\r\nAudioVideoServe.meetingEnter(id).then((res) => {}).catch((err) => {});\r\n"}),O,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功' // 类型: String; 说明: 描述\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n} \r\n"})]),V,(0,t._)("div",null,[M,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* @params id: '123', // 类型: String; required: true; 说明: 会议id; */   \r\nAudioVideoServe.meetingClose(id).then((res) => {}).catch((err) => {});\r\n"}),D,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功' // 类型: String 说明: 提示;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),T,(0,t._)("div",null,[q,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* @params id: '123', // 类型: String; required: true; 说明: 会议id; */                       \r\nAudioVideoServe.meetingQueryInfo(id).then((res) => {}).catch((err) => {});\r\n"}),U,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    id: '20221226091049114475000001', // 类型: String; 说明: 会议id\r\n    type: 'VIDEO' // 类型: String 说明: 会议类型,AUDIO_语音会议; VIDEO_视频会议;\r\n    title: '标题', // 类型: String 说明: 会议标题\r\n    members: [\r\n        {\r\n            confId: '20221226091611114494000001', // 类型: String; 说明: 会议id\r\n            sipAccount: '1002', // 类型: String; 说明: sip账号\r\n            uuid: '20221226091616114471000001', // 类型: String; 说明: 唯一id\r\n            status: 'INVITING', // 类型: String; 说明: 成员状态; INVITING_邀请中; REFUSE_拒绝; JOIN_加入; LEAVE_离开;\r\n            mute: false, // 类型: Boolean; 说明: 禁音; true_禁音, false_不禁音;\r\n            deaf: false, // 类型: Boolean; 说明: 禁听; true_禁听, false_不禁听;\r\n        }\r\n    ]\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),L,(0,t._)("div",null,[R,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/*\r\n    @params id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    @params title: '会议标题', // 类型: String; required: false; 说明: 会议标题;\r\n*/\r\nAudioVideoServe.meetingBaseInfoUpdate({id, title}).then((res) => {}).catch((err) => {});\r\n"}),P,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    id: '20221226091049114475000001', // 类型: String; 说明: 会议id\r\n    title: '标题', // 类型: String 说明: 会议标题\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),F,(0,t._)("div",null,[H,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/*\r\n    @params id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    @params layout: 'SQUARE', // 类型: String; required: true; 说明: 会议布局;'SQUARE'_宫格布局、'SPEECH'_演讲布局、'FOCUS'_焦点布局\r\n    @params member: '123', // 类型: String; required: true; 说明: 成员id; 修改布局为演讲者/焦点布局时填写焦点成员账号;修改布局为宫格时候，填写被取消焦点的成员账号;\r\n*/\r\nAudioVideoServe.meetingModifyLayout({id, layout, member}).then((res) => {}).catch((err) => {});\r\n"}),B,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功' // 类型: String 说明: 提示;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),x,(0,t._)("div",null,[z,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/*\r\n    @params id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    @params members: '123,456', // 类型: String; required: true; 说明: 成员sip账号;\r\n*/\r\nAudioVideoServe.meetingAddMember(id, members).then((res) => {}).catch((err) => {});\r\n"}),G,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Z,(0,t._)("div",null,[J,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/*\r\n    @params id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    @params members: '123,456', // 类型: String; required: true; 说明: 成员sip账号;\r\n*/\r\nAudioVideoServe.meetingDelMember(id, members).then((res) => {}).catch((err) => {});"}),Y,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),K,(0,t._)("div",null,[Q,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/*\r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    members: '123,456', // 类型: String; required: true; 说明: 成员sip账号;\r\n}\r\n*/\r\nAudioVideoServe.meetingMemberMute(id, members).then((res) => {}).catch((err) => {});\r\n"}),$,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),X,(0,t._)("div",null,[rr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    members: '123,456', // 类型: String; required: true; 说明: 成员sip账号;\r\n}\r\n*/\r\nAudioVideoServe.meetingMemberUnMute(id, members).then((res) => {}).catch((err) => {})"}),nr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),er,(0,t._)("div",null,[tr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    members: '123,456', // 类型: String; required: true; 说明: 成员sip账号;\r\n}\r\n*/\r\nAudioVideoServe.meetingMemberDeaf(id, members).then((res) => {}).catch((err) => {})"}),ir,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),sr,(0,t._)("div",null,[or,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    members: '123,456', // 类型: String; required: true; 说明: 成员sip账号;\r\n}\r\n*/\r\nAudioVideoServe.meetingMemberUnDeaf(id, members).then((res) => {}).catch((err) => {})"}),cr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),ar,(0,t._)("div",null,[ur,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    member: '123', // 类型: String; required: true; 说明: 成员sip账号;\r\n}\r\n*/\r\nAudioVideoServe.meetingAppointLookWho(id, member).then((res) => {}).catch((err) => {})"}),dr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),lr,(0,t._)("div",null,[gr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    member: '',  // 类型: String; required: true; 说明: 成员sip账号;\r\n    msg: '{code: '', data: {}}', // 类型: String; required: true; 说明: 自定义消息;\r\n}\r\n*/\r\nAudioVideoServe.meetingSendMsgToMember(id, member, msg).then((res) => {}).catch((err) => {})"}),_r,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),mr,(0,t._)("div",null,[vr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    msg: '{code: '', data: {}}', // 类型: String; required: true; 说明: 自定义消息;\r\n}\r\n*/\r\nAudioVideoServe.meetingSendMsgToAllMembers(id, msg).then((res) => {}).catch((err) => {})"}),fr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),pr,(0,t._)("div",null,[Sr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    members: ['123', '456'], // 类型: Array; required: true; 说明: 会议成员号码数组;\r\n}\r\n*/\r\nAudioVideoServe.meetingMembersProhibitSee(id, members).then((res) => {}).catch((err) => {})"}),hr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),br,(0,t._)("div",null,[kr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    members: ['123', '456'], // 类型: Array; required: true; 说明: 会议成员号码数组;\r\n}\r\n*/\r\nAudioVideoServe.meetingMembersUnProhibitSee(id, members).then((res) => {}).catch((err) => {})"}),Ar,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Cr,(0,t._)("div",null,[Nr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    members: ['123', '456'], // 类型: Array; required: true; 说明: 会议成员号码数组;\r\n}\r\n*/\r\nAudioVideoServe.meetingMembersOpenCamera(id, members).then((res) => {}).catch((err) => {})"}),Ir,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Wr,(0,t._)("div",null,[wr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    members: ['123', '456'], // 类型: Array; required: true; 说明: 会议成员号码数组;\r\n}\r\n*/\r\nAudioVideoServe.meetingMembersCloseCamera(id, members).then((res) => {}).catch((err) => {})"}),yr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),jr,(0,t._)("div",null,[Er,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* \r\n@params {\r\n    id: '123', // 类型: String; required: true; 说明: 会议id;\r\n    members: '123', // 类型: String; required: true; 说明: 会议成员号码;\r\n}\r\n*/\r\nAudioVideoServe.meetingMemberRefuse(id, members).then((res) => {}).catch((err) => {})"}),Or,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Vr,Mr,(0,t._)("div",null,[Dr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* @params sipAccount: '1002', // 类型: String; required: true; 说明: 成员sip号; */\r\nAudioVideoServe.voiceCall(sipAccount).then((res) => {}).catch((err) => {})"}),Tr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n    sessionId: '1672019736520', // 类型: String; 说明: 当前呼叫前端生成临时会话id;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),qr,(0,t._)("div",null,[Ur,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* @params sipAccount: '1002', // 类型: String; required: true; 说明: 成员sip号; */\r\nAudioVideoServe.videoCall(sipAccount).then((res) => {}).catch((err) => {})"}),Lr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n    sessionId: '1672019736520', // 类型: String; 说明: 当前呼叫前端生成临时会话id;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Rr,(0,t._)("div",null,[Pr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* @params sipAccount: '1002', // 类型: String; required: true; 说明: 成员sip号; */\r\nAudioVideoServe.monitorCall(sipAccount).then((res) => {}).catch((err) => {})"}),Fr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '指令发送成功', // 类型: String; 说明: 描述;\r\n    sessionId: '1672019736520', // 类型: String; 说明: 当前呼叫前端生成临时会话id;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Hr,Br,(0,t._)("div",null,[xr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* @params sessionId: '123'; type: String; required: true; 说明: 会话id; */\r\nAudioVideoServe.answer(sessionId).then((res) => {}).catch((err) => {})"}),zr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '接听指令发送成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Gr,Zr,(0,t._)("div",null,[Jr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* @params noticeName: '123'; type: String; required: true; 说明: 订阅名称; */\r\nAudioVideoServe.subscribeTcpNotice(noticeName).then((res) => {}).catch((err) => {})"}),Yr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '订阅失败', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),Kr,(0,t._)("div",null,[Qr,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* @params noticeName: '123'; type: String; required: true; 说明: 订阅名称; */\r\nAudioVideoServe.subscribeTcpNoticeUn(noticeName).then((res) => {}).catch((err) => {})"}),$r,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: '卸载成功', // 类型: String; 说明: 描述;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '卸载失败', // 类型: String; 说明: 描述\r\n}\r\n                    "})]),Xr,(0,t._)("div",null,[rn,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/*基本消息体*/\r\nmsg: {\r\n    code: 0, 类型: Number 说明: 通知code\r\n    message: '', 类型: String 说明: 描述\r\n    body?: {}, 类型: Object 说明: 消息体, 只有code为3或4才会返回;\r\n}\r\n/* code定义 \r\n    code: 0; // sip连接失败; disconnected_连接失败;\r\n    code: 1; // sip连接状态; connecting_重连中;connected_连接完毕;unregistered_重新注册失败;registrationFailed_注册失败;registered_注册成功;\r\n    code: 2; // 收到媒体流; remote_远程媒体; local_本地媒体;\r\n    code: 3; // 呼叫回调; failed_会话无法建立;confirmed_会话建立成功;ended_通话结束了;\r\n    code: 4; // 来电回调; progress_收到新的来电;accepted_来电被接听了;ended_来电已挂断;failed_会话无法建立;\r\n    code: 5; // 消息通知;\r\n*/\r\n\r\n/* msg.code === 0 */\r\n{\r\n    code: 0,\r\n    message: 'websocket 连接失败',\r\n    body: {event: 'disconnected', eventName: 'websocket 连接失败'}\r\n}\r\n/* msg.code === 1 */\r\n{\r\n    code: 1,\r\n    message: '重连中',\r\n    body: {\r\n        /* connecting_ 重连中; connected_连接完毕; unregistered_重新注册失败; registrationFailed_注册失败; registered_注册成功*/\r\n        event: 'connecting', eventName: '重连中'\r\n    }\r\n}\r\n/* msg.code === 2 */\r\n{\r\n    code: 2,\r\n    message: '远程媒体流',\r\n    body: {\r\n        /* event: remote_远程媒体; local_本地媒体;\r\n          srcObject: document.getElementById(video: HTMLElementId).srcObject = srcObject;\r\n        */\r\n        event: 'remote', eventName: '远程媒体流', srcObject: {}\r\n    }\r\n}\r\n/* msg.code === 3 主动呼叫 */\r\n{\r\n    code: 3,\r\n    message: '会话建立成功',\r\n    body: {\r\n        {\r\n            // type: String; 说明: 事件code; progress_呼叫中;failed_会话无法建立;confirmed_会话建立成功;ended_通话结束了;\r\n            event: 'confirmed',\r\n            // type: String; 说明: 事件描述\r\n            eventName: '会话建立成功',\r\n            sessionId: '1672023425336', // type: String; 说明: 当前呼叫前端生成临时会话id;\r\n            callType: 1; // type: Number; 说明: 1_会议呼叫; 2_普通呼叫;\r\n            /*\r\n                备注: 因为屏幕共享和音视频是用同一条轨道进行传输的,所以在屏幕共享状态下;\r\n                (禁用麦克、启用麦克、禁用视频、启用视频)4个功能操作统一返回, res:{code: 1,  message: '屏幕共享中'};\r\n            */\r\n            /*\r\n                sessionControl: 当 event === 'confirmed',返回当前会话控制方法;\r\n                sessionControl: { // 硬件调用\r\n                    isHasMicrophone: false, // 当前会话是否有麦克风设备;\r\n                    isHasCamera: false, // 当前会话是否有摄像头设备;\r\n                };\r\n                挂断\r\n                sessionControl.hangUp().then((res) => {}).catch((err) => {});\r\n                禁用麦克\r\n                sessionControl.disableMike().then((res) => {}).catch((err) => {});\r\n                启用麦克\r\n                sessionControl.enableMike().then((res) => {}).catch((err) => {});\r\n                禁用视频\r\n                sessionControl.disableVideo().then((res) => {}).catch((err) => {});\r\n                启用视频\r\n                sessionControl.enableVideo().then((res) => {}).catch((err) => {});\r\n                推送桌面流\r\n                sessionControl.switchDesktop().then((res) => {}).catch((err) => {});\r\n                推送本地流\r\n                sessionControl.switchLocalCamera().then((res) => {}).catch((err) => {});\r\n                获取远程媒体流\r\n                sessionControl.getRemoteStreams().then((res) => {}).catch((err) => {});\r\n                获取本地媒体流\r\n                sessionControl.getLocalStreams().then((res) => {}).catch((err) => {});\r\n                会话保持\r\n                sessionControl.hold().then((res) => {}).catch((err) => {});\r\n                会话取消保持\r\n                sessionControl.unhold().then((res) => {}).catch((err) => {});\r\n                1对1音视频通话通道消息, 也可以拦截msgType === 'CALL_CONTROL_EVENT_NOTIFY'的全局消息;\r\n                sessionControl.singleChatChannelMessage = (msg) => {\r\n                    msg: {\r\n                        account: 'az666', 操作人账号;\r\n                        operation: 'CLOSE_CAMERA',  'CLOSE_CAMERA':关闭摄像头;'OPEN_CAMERA': 打开摄像头;'CLOSE_MIC':关闭麦克风; 'OPEN_MIC': 打开麦克风;'CHANNEL_LOADING_COMPLETED': 通道加载完毕,用于关闭摄像头接听或关闭麦克风接听后操作;\r\n                        sessionId: '123456'; // 会话控制临时id;\r\n                    }\r\n                }\r\n            */\r\n            sessionControl?: {}\r\n        }\r\n    }\r\n}\r\n/* msg.code === 3 呼叫无法建立会话消息体 */\r\n{\r\n    code: 3,\r\n    message: '',\r\n    body: {\r\n        event: 'failed',\r\n        // 类型: String; 说明: 'CallFailed'_呼叫失败; 'Canceled'_自己取消; 'Rejected'_对方拒绝了你的邀请;\r\n        errorCode: 'CallFailed', \r\n        sessionId: '1672023425336', // type: String; 说明: 当前呼叫前端生成临时会话id;\r\n    }\r\n}\r\n/* msg.code === 3 navigator.mediaDevices.getUserMedia().catch((error) => {})创建媒体失败 */\r\n{\r\n    code: 3,\r\n    message: '媒体创建错误',\r\n    body: {\r\n        event: 'mediaError',\r\n        errorCode: 'Requested device not found',\r\n        error: '未找到麦克风设备',\r\n        sessionId: '1672023425336', // type: String; 说明: 当前呼叫前端生成临时会话id;\r\n    }\r\n}\r\n/* msg.code === 3 呼叫会话结束 */\r\n{\r\n    code: 3,\r\n    message: '通话结束了',\r\n    body: {\r\n        event: 'ended',\r\n        sessionId: '1672023425336', // type: String; 说明: 当前呼叫前端生成临时会话id;\r\n    }\r\n}\r\n/* msg.code === 4 收到来电 */\r\n{\r\n    code: 4,\r\n    message: '有新的来电',\r\n    body: {\r\n        event: 'progress', // type: String; 说明: progress_收到新的来电;accepted_来电被接听了;ended_来电已挂断;failed_会话无法建立;\r\n        eventName: '有新的来电', // type: String; 说明: 事件描述\r\n        sessionId: '1672023425336', // type: String; 说明: 当前呼叫前端生成临时会话id;\r\n        callType: 1; // type: Number; 说明: 1_会议呼叫; 2_普通呼叫;\r\n        confId?: '123456', // type: String; 说明: 如果是会议的话,表示会议id\r\n        /*\r\n            备注: 因为屏幕共享和音视频是用同一条轨道进行传输的,所以在屏幕共享状态下;\r\n            (禁用麦克、启用麦克、禁用视频、启用视频)4个功能操作统一返回, res:{code: 1,  message: '屏幕共享中'};\r\n        */\r\n        /*\r\n            sessionControl: 当 event === 'progress',返回当前会话控制方法;\r\n            sessionControl: { // 硬件调用\r\n                isHasMicrophone: false, // 当前会话是否有麦克风设备;\r\n                isHasCamera: false, // 当前会话是否有摄像头设备;\r\n            };\r\n            挂断\r\n            sessionControl.hangUp().then((res) => {}).catch((err) => {});\r\n            禁用麦克\r\n            sessionControl.disableMike().then((res) => {}).catch((err) => {});\r\n            启用麦克\r\n            sessionControl.enableMike().then((res) => {}).catch((err) => {});\r\n            禁用视频\r\n            sessionControl.disableVideo().then((res) => {}).catch((err) => {});\r\n            启用视频\r\n            sessionControl.enableVideo().then((res) => {}).catch((err) => {});\r\n            推送桌面流\r\n            sessionControl.switchDesktop().then((res) => {}).catch((err) => {});\r\n            推送本地流\r\n            sessionControl.switchLocalCamera().then((res) => {}).catch((err) => {});\r\n            获取远程媒体流\r\n            sessionControl.getRemoteStreams().then((res) => {}).catch((err) => {});\r\n            获取本地媒体流\r\n            sessionControl.getLocalStreams().then((res) => {}).catch((err) => {});\r\n            会话保持\r\n            sessionControl.hold().then((res) => {}).catch((err) => {});\r\n            会话取消保持\r\n            sessionControl.unhold().then((res) => {}).catch((err) => {});\r\n            1对1音视频通话通道消息, 也可以拦截msgType === 'CALL_CONTROL_EVENT_NOTIFY'的全局消息;\r\n            sessionControl.singleChatChannelMessage = (msg) => {\r\n                msg: {\r\n                    account: 'az666', 操作人账号;\r\n                    operation: 'CLOSE_CAMERA',  'CLOSE_CAMERA':关闭摄像头;'OPEN_CAMERA': 打开摄像头;'CLOSE_MIC':关闭麦克风; 'OPEN_MIC': 打开麦克风; 'CHANNEL_LOADING_COMPLETED': 通道加载完毕,用于关闭摄像头接听或关闭麦克风接听后操作;\r\n                    sessionId: '123456'; // 会话控制临时id;\r\n                }\r\n            }\r\n        */\r\n        sessionControl?: {}\r\n    }\r\n}\r\n/* msg.code === 4 收到来电无法建立会话消息体*/\r\n{\r\n    code: 4,\r\n    message: '',\r\n    body: {\r\n        event: 'failed',\r\n        errorCode: 'AnswerFailed', // 类型: String; 说明: 'AnswerFailed'_接听失败; 'Canceled'_对方取消; 'Rejected'_自己拒接;\r\n        errorCode: 'AnswerFailed', \r\n        sessionId: '1672023425336', // type: String; 说明: 当前呼叫前端生成临时会话id;\r\n    }\r\n}\r\n/* msg.code === 4 navigator.mediaDevices.getUserMedia().catch((error) => {})创建媒体失败 */\r\n{\r\n    code: 4,\r\n    message: '媒体创建错误',\r\n    body: {\r\n        event: 'mediaError',\r\n        errorCode: 'Requested device not found',\r\n        error: '未找到麦克风设备',\r\n        sessionId: '1672023425336', // type: String; 说明: 当前呼叫前端生成临时会话id;\r\n    }\r\n}\r\n/* msg.code === 4 来电会话结束 */\r\n{\r\n    code: 4,\r\n    message: '来电已挂断',\r\n    body: {\r\n        event: 'ended',\r\n        sessionId: '1672023425336', // type: String; 说明: 当前呼叫前端生成临时会话id;\r\n    }\r\n}\r\n/* msg.code === 5 */\r\n{\r\n    code: 5,\r\n    message: '消息通知',\r\n    body: {\r\n        /* msgType ===  'CONF_MEMBER_STATUS' */\r\n        msgType: 'CONF_MEMBER_STATUS',\r\n        msgTypeDesc: '会议成员状态',\r\n        data: {\r\n            msg: '[2022-12-26 11:34:21]坐席账号: 1002接受入会邀请中', // type: String; 说明: 描述\r\n            sipAccount: '1002', // type: String; 说明: sip账号\r\n            status: 'INVITING', // type: String; 说明: 成员状态; INVITING_邀请中, REFUSE_拒绝, JOIN_加入, LEAVE_离开; \r\n            confId: '20221226113412114494000001', // typt: String; 说明: 会议id\r\n            uuid: '20221226113421114483000001', // type: String; 说明: 会话唯一id\r\n        }\r\n        /* msgType === 'CONF_MEMBER_STATUS_NOTIFY' */\r\n        msgTypeDesc: '成员状态变更通知',\r\n        data: {\r\n            /*\r\n                'MUTE': 禁言; 'UNMUTE': 取消禁言; 'DEAF': 禁听;'UNDEAF': 取消禁听;'VMUTE': 关闭成员摄像头;'UNVMUTE': 打开成员摄像头;\r\n                'VBLIND': 禁止成员看会议视频; 'UNVBLIND': 取消禁止成员看会议视频; 'INVITE': '邀请中';\r\n                'JOIN': 加入会议;KICK: 剔除; 'HUP': 成员挂断; 'FOCUS': 聚焦某人; 'UNFOCUS': 取消聚焦某人;'SHARE':共享屏幕; 'UNSHARE': 取消共享屏幕;\r\n            */\r\n            action: 'JOIN', // 行为枚举\r\n            actionDesc: '加入会议', // 行为描述\r\n            confId: '123456789': // 会议iid\r\n            memberAccount: '1001', // 成员账号\r\n        }\r\n        /* msgType ===  'LOCAL_DESK_OPERATE' */\r\n        msgTypeDesc: '本地屏幕共享操作状态',\r\n        data: {\r\n            action: 'DesktopEnded', // DesktopEnded: 屏幕共享关闭了; DesktopStart: 屏幕共享开始了;\r\n            sessionId: '123456'; // 会话控制临时id;\r\n            mettingId?: '123456'; // 如果是会议的话, 会返回会议id;\r\n        }\r\n        /*msgType === 'CALL_CONTROL_EVENT_NOTIFY'*/\r\n        msgTypeDesc: '点对点操作通知'; 一对一音视频呼叫消息\r\n        data: {\r\n            account: 'az666', 操作人账号;\r\n            operation: 'CLOSE_CAMERA',  'CLOSE_CAMERA':关闭摄像头;'OPEN_CAMERA': 打开摄像头;'CLOSE_MIC':关闭麦克风; 'OPEN_MIC': 打开麦克风;\r\n            sessionId: '123456'; // 会话控制临时id;\r\n        }\r\n    }\r\n}\r\n"})]),nn,en,(0,t._)("div",null,[tn,(0,t.Wm)(fn,{language:"javascript",code:"\r\nAudioVideoServe.getSystemMediadevices().then((res) => {})"}),sn,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    audioInputOptions: Array [{value: string, label: string}]; 说明： 音频输入设备\r\n    videoInputOptions: Array [{value: string, label: string}]; 说明： 视频输入设备\r\n    audiooutputOptions: Array [{value: string, label: string}]; 说明： 音频输出设备\r\n    isAudioInput: Boolean 是否有音频输入设备;\r\n    isVideoInput: Boolean 是否视频输入设备;\r\n    isAudioOutput: Boolean 是否有音频输出设备;\r\n    audioDeviceIds: [string] // 音频DevIds;\r\n    videoDeviceIds: [string] // 视频DevIds;\r\n}\r\n"})]),on,(0,t._)("div",null,[cn,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* @params devId: 'default'; type: String; required: true; 说明: 设备idid; */\r\nAudioVideoServe.setUpAudioInputDeviceId(devId).then((res) => {}).catch((err) => {})"}),an,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: ${devId}, // 类型: String; 说明: 成功后返回devId;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})]),un,(0,t._)("div",null,[dn,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* @params devId: 'default'; type: String; required: true; 说明: 设备idid; */\r\nAudioVideoServe.setUpVideoInputDeviceId(devId).then((res) => {}).catch((err) => {})"}),ln,(0,t.Wm)(fn,{language:"javascript",code:"\r\n/* 成功参数说明*/\r\nres: {\r\n    code: 1, // 类型: Number; 说明: 成功编码\r\n    message: ${devId}, // 类型: String; 说明: 成功后返回devId;\r\n}\r\n/* 失败参数说明: */\r\nerr: {\r\n    code: 0, // 类型: Number; 说明: 错误编码\r\n    message: '失败', // 类型: String; 说明: 描述\r\n}\r\n"})])])]})),_:1})]})),_:1})])}],["__scopeId","data-v-302fc3d3"]])},8305:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(5393),i={class:"document_name"},s=function(r){return(0,t.dD)("data-v-2dd025a0"),r=r(),(0,t.Cn)(),r}((function(){return(0,t._)("img",{src:"public/favicon.ico",class:"document_name_logo"},null,-1)})),o=["innerHTML"];const c={props:{titleName:""},components:{DownOutlined:e(9421).Z},setup:function(){}},a=(0,e(3744).Z)(c,[["render",function(r,n,e,c,a,u){var d=(0,t.up)("router-link"),l=(0,t.up)("a-col"),g=(0,t.up)("DownOutlined"),_=(0,t.up)("a-menu-item"),m=(0,t.up)("a-menu"),v=(0,t.up)("a-dropdown"),f=(0,t.up)("a-row");return(0,t.wg)(),(0,t.iD)("div",i,[(0,t.Wm)(f,{type:"flex"},{default:(0,t.w5)((function(){return[(0,t.Wm)(l,{flex:"200px"},{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"home",class:"logo_wrap"},{default:(0,t.w5)((function(){return[s,(0,t.Uk)("  "),(0,t._)("span",{innerHTML:e.titleName},null,8,o)]})),_:1})]})),_:1}),(0,t.Wm)(l,{flex:"auto"}),(0,t.Wm)(l,{flex:"50px"},{default:(0,t.w5)((function(){return[(0,t.Wm)(v,{trigger:["click"]},{overlay:(0,t.w5)((function(){return[(0,t.Wm)(m,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"talkDemo"},{default:(0,t.w5)((function(){return[(0,t.Uk)("对讲")]})),_:1})]})),_:1}),(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"imDemo"},{default:(0,t.w5)((function(){return[(0,t.Uk)("即时通信")]})),_:1})]})),_:1}),(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"audioVideoDemo"},{default:(0,t.w5)((function(){return[(0,t.Uk)("音视频")]})),_:1})]})),_:1})]})),_:1})]})),default:(0,t.w5)((function(){return[(0,t._)("div",{onClick:n[0]||(n[0]=(0,t.iM)((function(){}),["prevent"])),class:"menu_dropdown text_right"},[(0,t.Uk)(" 演示 "),(0,t.Wm)(g)])]})),_:1})]})),_:1}),(0,t.Wm)(l,{flex:"50px"},{default:(0,t.w5)((function(){return[(0,t.Wm)(v,{trigger:["click"]},{overlay:(0,t.w5)((function(){return[(0,t.Wm)(m,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"talkDemoInstructions"},{default:(0,t.w5)((function(){return[(0,t.Uk)("对讲")]})),_:1})]})),_:1}),(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"imDemoInstructions"},{default:(0,t.w5)((function(){return[(0,t.Uk)("即时通信")]})),_:1})]})),_:1}),(0,t.Wm)(_,null,{default:(0,t.w5)((function(){return[(0,t.Wm)(d,{to:"audioVideoInstructions"},{default:(0,t.w5)((function(){return[(0,t.Uk)("音视频")]})),_:1})]})),_:1})]})),_:1})]})),default:(0,t.w5)((function(){return[(0,t._)("div",{onClick:n[1]||(n[1]=(0,t.iM)((function(){}),["prevent"])),class:"menu_dropdown text_right"},[(0,t.Uk)(" API "),(0,t.Wm)(g)])]})),_:1})]})),_:1})]})),_:1})])}],["__scopeId","data-v-2dd025a0"]])}}]);